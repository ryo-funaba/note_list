version: 2
jobs:
  build:
    docker:
      - image: circleci/ruby:2.6.5-node-browsers
        environment:
          RAILS_ENV: test
          DATABASE_HOSTNAME: 127.0.0.1
          DATABASE_NAME: note_list
          DATABASE_USERNAME: root
          DATABASE_PASSWORD: ''
          TZ: UTC
      - image: circleci/mysql:5.7
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes

    working_directory: ~/circleci-rails

    steps:
      - checkout

      # https://discuss.circleci.com/t/using-bundler-2-0-during-ci-fails/27411/3
      - run:
          name: Bundler設定
          command: |
            echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
            source $BASH_ENV
            gem install bundler

      # bundle installの結果をrestore
      - restore_cache:
          keys:
            - gem-cache-v1-{{ checksum "Gemfile.lock" }}
            - gem-cache-v1-

      - run:
          name: default mysql client install
          command: |
            sudo apt update
            sudo apt-get install default-mysql-client

      # bundle install 実行
      - run:
          name: bundle install
          command: bundle check --path=vendor/bundle || bundle install --path=vendor/bundle --jobs=4 --retry=3

      # bundle installされたものcacheする
      - save_cache:
          key: gem-cache-v1-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      # データベースの起動を待機
      - run:
          name: データベースの起動を待機
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 120s

      # データベースのセットアップ
      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load

      # テスト実行
      - run:
          name: テスト実行
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"
            bundle exec rspec --format progress \
                            --format RspecJunitFormatter \
                            --out /tmp/test-results/rspec.xml \
                            --format progress \
                            $TEST_FILES


      # テスト結果を保存
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

#   deploy:
#     machine:
#       image: circleci/classic:edge
#     steps:
#       - checkout
#       # CircleCI に登録した秘密鍵を呼び出す
#       - add_ssh_keys:
#       # CircleCI に登録した環境変数を使って SSH
#       - run: ssh ${USER_NAME}@${HOST_NAME} 'cd /var/www/projects/note_list/ && git pull origin master'

# workflows:
#   version: 2
#   build_and_deploy:
#     jobs:
#       - build
#       - deploy:
#           requires:
#             # build ジョブに依存してるので、先に build ジョブを実行する
#               - build
#           # master ブランチに push された場合のみ deploy
#           filters:
#             branches:
#               only: master